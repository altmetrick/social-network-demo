{"version":3,"file":"static/js/388.fd0500c2.chunk.js","mappings":"2LAiBMA,EAA+B,SAACC,GACpC,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WAER,OADAF,GAAcG,EAAAA,EAAAA,OACP,WACLH,GAAcI,EAAAA,EAAAA,MACf,CACF,GAAE,KAGD,4BACE,SAACC,EAAD,KACA,SAACC,EAAD,MAGL,EASKD,EAAkC,SAACN,GACvC,IAEMQ,GAFWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMC,KAAKC,QAAlC,IAEAC,KAAI,SAACC,GAAD,OAC/B,SAACC,GAAD,UAA8CD,GAAhCA,EAAKE,OAASF,EAAKG,QADF,IAIjC,OACE,gBAAKC,MAAO,CAAEC,OAAQ,OAAQC,UAAW,UAAzC,SAAsDZ,GAEzD,EAEKO,EAA2C,SAACf,GAChD,OACE,4BACE,4BACE,gBAAKqB,IAAKrB,EAAMsB,OAAS,GAAIJ,MAAO,CAAEC,OAAQ,WAC9C,uBAAInB,EAAMuB,eAEZ,yBAAMvB,EAAMiB,WACZ,mBACA,oBAGL,EAEKV,EAAwC,SAACP,GAC7C,OAA8BwB,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KAEMxB,GAAWC,EAAAA,EAAAA,MAYjB,OACE,4BACE,0BACE,qBAAUwB,MAAOT,EAASU,SAbP,SAACC,GACxBH,EAAWG,EAAEC,OAAOH,MACrB,OAaG,mBAAQI,UAAU,EAAOC,QAXP,WACpB9B,GAAc+B,EAAAA,EAAAA,IAAef,IAE7BQ,EAAW,GACZ,EAOG,oBAKL,EAED,UAtFyC,SAACzB,GACxC,OACE,0BACE,SAACD,EAAD,KAGL,C","sources":["pages/ChatPage/ChatPage.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootStateT } from '../../redux/redux-store';\nimport {\n  sendMessageThC,\n  StartMessageListeningThC,\n  StopMessageListeningThC,\n} from '../../redux/reducers/chat-reducer';\n\nconst ChatPage: FunctionComponent<any> = (props) => {\n  return (\n    <div>\n      <Chat />\n    </div>\n  );\n};\n\nconst Chat: FunctionComponent<any> = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch<any>(StartMessageListeningThC());\n    return () => {\n      dispatch<any>(StopMessageListeningThC());\n    };\n  }, []);\n\n  return (\n    <div>\n      <Messages />\n      <AddMessageForm />\n    </div>\n  );\n};\n\ntype ChatMessageT = {\n  userId: number;\n  userName: string;\n  message: string;\n  photo: string | null;\n};\n\nconst Messages: FunctionComponent<{}> = (props) => {\n  const messages = useSelector((state: RootStateT) => state.chat.messages);\n\n  const messagesEls = messages.map((item) => (\n    <Message key={item.userId + item.message} {...item} />\n  ));\n\n  return (\n    <div style={{ height: '60vh', overflowY: 'scroll' }}>{messagesEls}</div>\n  );\n};\n\nconst Message: FunctionComponent<ChatMessageT> = (props) => {\n  return (\n    <div>\n      <div>\n        <img src={props.photo || ''} style={{ height: '80px' }} />\n        <b>{props.userName}</b>\n      </div>\n      <div>{props.message}</div>\n      <hr />\n      <br />\n    </div>\n  );\n};\n\nconst AddMessageForm: FunctionComponent<{}> = (props) => {\n  const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onMessageChanged = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const onMessageSend = () => {\n    dispatch<any>(sendMessageThC(message));\n\n    setMessage('');\n  };\n\n  return (\n    <div>\n      <div>\n        <textarea value={message} onChange={onMessageChanged} />\n      </div>\n      <button disabled={false} onClick={onMessageSend}>\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"names":["Chat","props","dispatch","useDispatch","useEffect","StartMessageListeningThC","StopMessageListeningThC","Messages","AddMessageForm","messagesEls","useSelector","state","chat","messages","map","item","Message","userId","message","style","height","overflowY","src","photo","userName","useState","setMessage","value","onChange","e","target","disabled","onClick","sendMessageThC"],"sourceRoot":""}